{"version":3,"sources":["components/Search/Search.js","components/ItemList/ItemList.js","components/Content/Content.js","components/Media/Media.js","ITunesAPI/ITunesAPI.js","components/App/App.js","index.js"],"names":["Search","state","selectedType","props","typesMedia","value","term","onChangeType","e","setState","target","selectedIndex","onChangeTerm","onSubmit","preventDefault","onSubmitQuery","renderTypesMedia","this","map","item","key","label","className","onChange","type","Component","ItemList","name","img","url","playMedia","price","data-name","onClick","src","alt","Content","enable","maxId","data","activeMedia","contentWithMedia","list","length","Media","content","typeMedia","closeMedia","controls","icon","faWindowClose","ITunesAPI","_apiBase","getResource","a","newUrl","URL","fetch","method","responce","json","getMedia","media","newQuery","toLowerCase","split","join","res","results","_transformResults","trackName","artworkUrl100","previewUrl","trackPrice","App","iTunesService","_maxId","console","log","then","catch","openMedia","ReactDOM","render","document","getElementById"],"mappings":"6UAIqBA,G,4NAEjBC,MAAQ,CACJC,aAAc,EAAKC,MAAMC,WAAW,GAAGC,MACvCC,KAAM,I,EAuCVC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVP,aAAcM,EAAEE,OAAOF,EAAEE,OAAOC,eAAeN,S,EAIvDO,aAAe,SAACJ,GACZ,EAAKC,SAAS,CACVH,KAAME,EAAEE,OAAOL,S,EAIvBQ,SAAW,SAACL,GAAO,IAAD,EACiB,EAAKP,MAA5BC,EADM,EACNA,aAAcI,EADR,EACQA,KACtBE,EAAEM,iBACF,EAAKX,MAAMY,cAAcb,EAAcI,I,wEAnDjC,IAEAU,EADiBC,KAAKd,MAApBC,WAC4Bc,KAAI,SAACC,GACrC,OACI,4BAAQC,IAAKD,EAAKd,MAAOA,MAAOc,EAAKd,OAAQc,EAAKE,UAG1D,OACI,yBAAKC,UAAU,oBACX,0BAAMT,SAAUI,KAAKJ,UACjB,yBAAKS,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,WAEJ,4BACIA,UAAU,6BACVC,SAAUN,KAAKV,aACfF,MAAOY,KAAKhB,MAAMC,cAChBc,GAEN,2BACIQ,KAAK,OACLF,UAAU,eACVC,SAAUN,KAAKL,aACfP,MAAOY,KAAKhB,MAAMK,OACtB,4BACIkB,KAAK,SACLF,UAAU,8BAFd,iB,GAhCYG,cCSrBC,G,MAVE,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,KAAWC,GAA4B,EAAjCC,IAAiC,EAA5BD,KAAYE,GAAgB,EAAvBC,MAAuB,EAAhBD,WACvC,OACI,wBACIE,YAAWL,EACXM,QAASH,GACT,yBAAKI,IAAKN,EAAKO,IAAKR,OC4BjBS,G,iNA7BXnC,MAAQ,CACJoC,QAAQ,G,wEAIR,IAAIC,EAAQ,IADP,EAEkCrB,KAAKd,MAArCoC,EAFF,EAEEA,KAAMC,EAFR,EAEQA,YAAaV,EAFrB,EAEqBA,UACpBW,EAAmBD,EAAc,UAAY,GAC/CE,EAAwB,IAAhBH,EAAKI,OAAgB,iCAAUJ,EAAKrB,KAAI,SAACC,GAAU,IACnDQ,EAA0BR,EAA1BQ,KAAME,EAAoBV,EAApBU,IAAKD,EAAeT,EAAfS,IAAKG,EAAUZ,EAAVY,MACxB,OACI,kBAAC,EAAD,CACIX,IAAKkB,IACLT,IAAKA,EACLF,KAAMA,EACNC,IAAKA,EACLG,MAAOA,EACPD,UAAW,kBAAMA,EAAUD,SAGvC,OACI,wBAAIP,UAAS,kBAAamB,IACpBC,O,GAxBIjB,c,wBCyBPmB,EAxBD,SAAC,GAAoC,IAC3CC,EADShB,EAAiC,EAAjCA,IAAKiB,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAE7B,OAAOD,GACH,IAAK,QACDD,EAAU,2BAAOG,UAAQ,EAACd,IAAKL,IAC/B,MAEJ,QACIgB,EAAU,2BAAOG,UAAQ,EAACd,IAAKL,IAGvC,OACI,yBAAKP,UAAU,SACTuB,EACF,4BACIrB,KAAK,SACLF,UAAU,4BACVW,QAASc,GACL,kBAAC,IAAD,CAAiBE,KAAMC,S,wBCxBtBC,E,iDAEjBC,SAAW,kC,KAEXC,Y,uCAAc,WAAOxB,GAAP,iBAAAyB,EAAA,6DACJC,EAAS,IAAIC,IAAJ,UAAW,EAAKJ,UAAhB,OAA2BvB,IADhC,SAEa4B,MAAMF,EAAQ,CAAEG,OAAQ,SAFrC,cAEJC,EAFI,gBAGGA,EAASC,OAHZ,mF,2DAMdC,S,uCAAW,WAAOvD,EAAMwD,GAAb,iBAAAR,EAAA,6DACDS,EAAWzD,EAAK0D,cAAcC,MAAM,KAAKC,KAAK,KAD7C,SAEW,EAAKb,YAAL,gBAA0BU,EAA1B,kBAA4CD,IAFvD,cAEDK,EAFC,gBAGMA,EAAIC,QAAQlD,IAAI,EAAKmD,mBAH3B,mF,6DAMXA,kBAAoB,SAAClD,GACjB,MAAM,CACFQ,KAAMR,EAAKmD,UACX1C,IAAKT,EAAKoD,cACV1C,IAAKV,EAAKqD,WACVzC,MAAOZ,EAAKsD,cCdHC,E,2MAEjBC,cAAgB,IAAIxB,E,EACpByB,OAAS,I,EAET3E,MAAQ,CACJsC,KAAM,GACNjC,KAAM,GACNwD,MAAO,aACPtB,aAAa,EACbX,IAAK,I,EA4BTC,UAAY,SAACD,GACT,IAAMW,EAAc,EAAKvC,MAAMuC,YAC/BqC,QAAQC,IAAIjD,EAAKW,GACjB,EAAK/B,SAAS,CACV+B,aAAcA,EACdX,IAAKA,K,EAIbkB,WAAa,WACT,EAAKtC,SAAS,CACV+B,aAAa,K,EAIrBzB,cAAgB,SAAC+B,EAAWxC,GACxBuE,QAAQC,IAAIhC,EAAWxC,GACvB,EAAKqE,cACAd,SAASvD,EAAMwC,GACfiC,MAAK,SAACxC,GACH,EAAK9B,UAAS,SAACR,GACX,MAAM,CACFsC,OACAuB,MAAOhB,EACPxC,KAAMA,SAGf0E,OAAM,WACL,EAAKvE,SAAS,CACV8B,KAAM,GACNuB,MAAOhB,EACPxC,KAAMA,Q,wEAxDZ,IAAD,SAOqCW,KAAKhB,MAAvCsC,EAPH,EAOGA,KAAMuB,EAPT,EAOSA,MAAOtB,EAPhB,EAOgBA,YAAaX,EAP7B,EAO6BA,IAC5BoD,EAAYzC,EAAc,kBAAC,EAAD,CAAOX,IAAKA,EAAKiB,UAAWgB,EAAOf,WAAY9B,KAAK8B,aAAiB,KACrG,OACI,yBAAKzB,UAAU,kBACX,yBAAKA,UAAU,aACX,kBAAC,EAAD,CACIlB,WAZG,CACf,CAACiB,MAAO,cAAehB,MAAO,cAC9B,CAACgB,MAAO,QAAShB,MAAO,SACxB,CAACgB,MAAO,QAAShB,MAAO,SACxB,CAACgB,MAAO,aAAchB,MAAO,cASjBU,cAAeE,KAAKF,gBACxB,kBAAC,EAAD,CACIwB,KAAMA,EACNC,YAAaA,EACbV,UAAW,SAACD,GAAD,OAAS,EAAKC,UAAUD,MACrCoD,Q,GAhCWxD,aCHjCyD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e72a4094.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Search.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nexport default class Search extends Component {\r\n\r\n    state = {\r\n        selectedType: this.props.typesMedia[0].value,\r\n        term: ''\r\n    }\r\n\r\n    render() {\r\n        const { typesMedia } = this.props;\r\n        const renderTypesMedia = typesMedia.map((item) => {\r\n            return(\r\n                <option key={item.value} value={item.value}>{item.label}</option>\r\n            );\r\n        });\r\n        return(\r\n            <div className=\"container-search\">\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">Search</span>\r\n                        </div>\r\n                        <select \r\n                            className=\"form-control select-custom\" \r\n                            onChange={this.onChangeType}\r\n                            value={this.state.selectedType}>\r\n                            { renderTypesMedia }\r\n                        </select>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            onChange={this.onChangeTerm}\r\n                            value={this.state.term} />\r\n                        <button \r\n                            type=\"submit\"\r\n                            className=\"btn btn-success btn-submit\">\r\n                            Search\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onChangeType = (e) => {\r\n        this.setState({\r\n            selectedType: e.target[e.target.selectedIndex].value\r\n        })\r\n    }\r\n\r\n    onChangeTerm = (e) => {\r\n        this.setState({\r\n            term: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        const { selectedType, term } = this.state;\r\n        e.preventDefault();\r\n        this.props.onSubmitQuery(selectedType, term);\r\n    }\r\n\r\n}","import React from 'react';\r\nimport './ItemList.css';\r\n\r\nconst ItemList = ({ name, url, img, price, playMedia }) => {\r\n    return(\r\n        <li \r\n            data-name={name}\r\n            onClick={playMedia}>\r\n            <img src={img} alt={name} />\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default ItemList;","import React, {Component} from 'react';\r\nimport ItemList from '../ItemList/ItemList';\r\nimport './Content.css'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nclass Content extends Component{\r\n\r\n    state = {\r\n        enable: false\r\n    };\r\n\r\n    render() {\r\n        let maxId = 100;\r\n        const {data, activeMedia, playMedia} = this.props;\r\n        const contentWithMedia = activeMedia ? ' active' : '';\r\n        let list = (data.length === 0) ? 'Пусто' : data.map((item) => {\r\n            const { name, url, img, price } = item;\r\n            return(\r\n                <ItemList \r\n                    key={maxId++} \r\n                    url={url} \r\n                    name={name} \r\n                    img={img} \r\n                    price={price}\r\n                    playMedia={() => playMedia(url)} />\r\n            )\r\n        });\r\n        return(\r\n            <ul className={`content ${contentWithMedia}`}>\r\n                { list }\r\n            </ul>\r\n        );\r\n    }\r\n\r\n} \r\n\r\nexport default Content;","import React from 'react';\r\nimport './Media.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Media = ({ url, typeMedia, closeMedia }) => {\r\n    let content;\r\n    switch(typeMedia) {\r\n        case 'music':{\r\n            content = <audio controls src={url} />;\r\n            break;\r\n        }\r\n        default:{\r\n            content = <video controls src={url} />;\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"media\">\r\n            { content }\r\n            <button \r\n                type=\"button\"\r\n                className=\"btn btn-danger btn-custom\"\r\n                onClick={closeMedia}>\r\n                    <FontAwesomeIcon icon={faWindowClose} />\r\n                </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Media;","export default class ITunesAPI {\r\n\r\n    _apiBase = 'https://itunes.apple.com/search';\r\n\r\n    getResource = async (url) => {\r\n        const newUrl = new URL(`${this._apiBase}${url}`);\r\n        const responce = await fetch(newUrl, { method: 'POST' });\r\n        return await responce.json();\r\n    };\r\n    \r\n    getMedia = async (term, media) => {\r\n        const newQuery = term.toLowerCase().split(' ').join('+');\r\n        const res = await this.getResource(`?term=${newQuery}&media=${media}`);\r\n        return await res.results.map(this._transformResults);\r\n    };\r\n\r\n    _transformResults = (item) => {\r\n        return{\r\n            name: item.trackName,\r\n            img: item.artworkUrl100,\r\n            url: item.previewUrl,\r\n            price: item.trackPrice\r\n        }\r\n    };\r\n\r\n}","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Search from '../Search/Search';\r\nimport Content from '../Content/Content';\r\nimport Media from '../Media/Media';\r\nimport ITunesAPI from '../../ITunesAPI/ITunesAPI';\r\n\r\nexport default class App extends Component {\r\n\r\n    iTunesService = new ITunesAPI();\r\n    _maxId = 100;\r\n\r\n    state = {\r\n        data: [],\r\n        term: '',\r\n        media: 'musicVideo',\r\n        activeMedia: false,\r\n        url: ''\r\n    };\r\n\r\n    render() {\r\n        const typesMedia = [\r\n            {label: 'Music Video', value: 'musicVideo'},\r\n            {label: 'Music', value: 'music'},\r\n            {label: 'Movie', value: 'movie'},\r\n            {label: 'Audio-Book', value: 'audioBook'},\r\n        ];\r\n        const { data, media, activeMedia, url } = this.state;\r\n        const openMedia = activeMedia ? <Media url={url} typeMedia={media} closeMedia={this.closeMedia} /> : null;\r\n        return(\r\n            <div className=\"main-container\">\r\n                <div className=\"container\">\r\n                    <Search \r\n                        typesMedia={typesMedia}\r\n                        onSubmitQuery={this.onSubmitQuery} />\r\n                    <Content \r\n                        data={data} \r\n                        activeMedia={activeMedia}\r\n                        playMedia={(url) => this.playMedia(url)} />\r\n                    { openMedia }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    playMedia = (url) => {\r\n        const activeMedia = this.state.activeMedia;\r\n        console.log(url, activeMedia);\r\n        this.setState({\r\n            activeMedia: !activeMedia,\r\n            url: url\r\n        })\r\n    };\r\n\r\n    closeMedia = () => {\r\n        this.setState({\r\n            activeMedia: false\r\n        })\r\n    };\r\n\r\n    onSubmitQuery = (typeMedia, term) => {\r\n        console.log(typeMedia, term);\r\n        this.iTunesService\r\n            .getMedia(term, typeMedia)\r\n            .then((data) => {\r\n                this.setState((state) => {\r\n                    return{\r\n                        data,\r\n                        media: typeMedia,\r\n                        term: term\r\n                    }\r\n                });\r\n            }).catch(() => {\r\n                this.setState({\r\n                    data: [],\r\n                    media: typeMedia,\r\n                    term: term\r\n                })\r\n            });\r\n    }\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}