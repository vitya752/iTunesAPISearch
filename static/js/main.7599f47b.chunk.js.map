{"version":3,"sources":["components/Search/Search.js","components/ItemList/ItemList.js","components/Content/Content.js","components/Media/Media.js","ITunesAPI/ITunesAPI.js","components/App/App.js","index.js"],"names":["Search","state","selectedType","props","typesMedia","value","term","disabled","openWindow","onChangeType","e","setState","target","selectedIndex","onChangeTerm","length","onSubmit","preventDefault","onSubmitQuery","onSearchWindowSetState","onDisableScroll","windowState","renderTypesMedia","this","map","item","key","label","close","className","type","onClick","icon","faSearch","faWindowClose","onChange","Component","ItemList","name","img","url","playMedia","price","data-name","src","alt","Content","maxId","data","activeMedia","contentWithMedia","list","Media","content","typeMedia","closeMedia","autoPlay","controls","ITunesAPI","_apiBase","getResource","a","newUrl","URL","fetch","method","responce","json","getMedia","media","newQuery","toLowerCase","split","join","res","results","_transformResults","trackName","artworkUrl100","previewUrl","trackPrice","App","iTunesService","_maxId","disableScroll","window","scrollTo","then","catch","disableState","openMedia","styleMainContainer","Fragment","style","position","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7599f47b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Search.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class Search extends Component {\r\n\r\n    state = {\r\n        selectedType: this.props.typesMedia[0].value,\r\n        term: '',\r\n        disabled: true,\r\n        openWindow: true\r\n    }\r\n\r\n    render() {\r\n        const { typesMedia } = this.props;\r\n        const renderTypesMedia = typesMedia.map((item) => {\r\n            return(\r\n                <option key={item.value} value={item.value}>{item.label}</option>\r\n            );\r\n        });\r\n        const close = this.state.openWindow ? '' : 'close';\r\n        return(\r\n            <div className=\"search\">\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-success btn--open\"\r\n                    onClick={() => this.onSearchWindowSetState(true)}>\r\n                        <FontAwesomeIcon icon={faSearch} />\r\n                </button>\r\n                <div className={`container-search ${close}`}>\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-danger btn--close\"\r\n                        onClick={() => this.onSearchWindowSetState(false)}>\r\n                        <FontAwesomeIcon icon={faWindowClose} />\r\n                    </button>\r\n                    <div className=\"container\">\r\n                        <h1 className=\"header mb-3\">iTunes API Search</h1>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"input-group mb-3\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\">Search</span>\r\n                                </div>\r\n                                <select \r\n                                    className=\"form-control select-custom\" \r\n                                    onChange={this.onChangeType}\r\n                                    value={this.state.selectedType}>\r\n                                    { renderTypesMedia }\r\n                                </select>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\"\r\n                                    onChange={this.onChangeTerm}\r\n                                    value={this.state.term} />\r\n                                <button \r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-success btn-submit\"\r\n                                    disabled={this.state.disabled}>\r\n                                    Search\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onChangeType = (e) => {\r\n        this.setState({\r\n            selectedType: e.target[e.target.selectedIndex].value\r\n        })\r\n    }\r\n\r\n    onChangeTerm = (e) => {\r\n        this.setState({\r\n            term: e.target.value,\r\n            disabled: e.target.value.length > 0 ? false : true \r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        const { selectedType, term } = this.state;\r\n        e.preventDefault();\r\n        this.props.onSubmitQuery(selectedType, term);\r\n        this.onSearchWindowSetState(false);\r\n        this.props.onDisableScroll(false);\r\n    }\r\n\r\n    onSearchWindowSetState = (windowState) => {\r\n        this.setState({\r\n            openWindow: windowState\r\n        });\r\n        if( windowState === true ) {\r\n            this.props.onDisableScroll(true);\r\n        }else this.props.onDisableScroll(false);\r\n    }\r\n\r\n}","import React from 'react';\r\nimport './ItemList.css';\r\n\r\nconst ItemList = ({ name, url, img, price, playMedia }) => {\r\n    return(\r\n        <li \r\n            data-name={name}\r\n            onClick={playMedia}>\r\n            <img src={img} alt={name} />\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default ItemList;","import React, {Component} from 'react';\r\nimport ItemList from '../ItemList/ItemList';\r\nimport './Content.css'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nclass Content extends Component{\r\n\r\n    render() {\r\n        let maxId = 100;\r\n        const {data, activeMedia, playMedia} = this.props;\r\n        const contentWithMedia = activeMedia ? ' active' : '';\r\n        let list = (data.length === 0) ? 'Content is empty!' : data.map((item) => {\r\n            const { name, url, img, price } = item;\r\n            return(\r\n                <ItemList \r\n                    key={maxId++} \r\n                    url={url} \r\n                    name={name} \r\n                    img={img} \r\n                    price={price}\r\n                    playMedia={() => playMedia(url)} />\r\n            )\r\n        });\r\n        return(\r\n            <ul className={`content ${contentWithMedia}`}>\r\n                { list }\r\n            </ul>\r\n        );\r\n    }\r\n\r\n} \r\n\r\nexport default Content;","import React from 'react';\r\nimport './Media.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Media = ({ url, typeMedia, closeMedia }) => {\r\n    let content;\r\n    switch(typeMedia) {\r\n        case 'music':{\r\n            content = <audio autoPlay controls src={url} />;\r\n            break;\r\n        }\r\n        default:{\r\n            content = <video autoPlay controls src={url} />;\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"media\">\r\n            { content }\r\n            <button \r\n                type=\"button\"\r\n                className=\"btn btn-danger btn-media-close\"\r\n                onClick={closeMedia}>\r\n                    <FontAwesomeIcon icon={faWindowClose} />\r\n                </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Media;","export default class ITunesAPI {\r\n\r\n    _apiBase = 'https://itunes.apple.com/search';\r\n\r\n    getResource = async (url) => {\r\n        const newUrl = new URL(`${this._apiBase}${url}`);\r\n        const responce = await fetch(newUrl, { method: 'POST' });\r\n        return await responce.json();\r\n    };\r\n    \r\n    getMedia = async (term, media) => {\r\n        const newQuery = term.toLowerCase().split(' ').join('+');\r\n        const res = await this.getResource(`?term=${newQuery}&media=${media}`);\r\n        return await res.results.map(this._transformResults);\r\n    };\r\n\r\n    _transformResults = (item) => {\r\n        return{\r\n            name: item.trackName,\r\n            img: item.artworkUrl100,\r\n            url: item.previewUrl,\r\n            price: item.trackPrice\r\n        }\r\n    };\r\n\r\n}","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Search from '../Search/Search';\r\nimport Content from '../Content/Content';\r\nimport Media from '../Media/Media';\r\nimport ITunesAPI from '../../ITunesAPI/ITunesAPI';\r\n\r\nexport default class App extends Component {\r\n\r\n    iTunesService = new ITunesAPI();\r\n    _maxId = 100;\r\n\r\n    state = {\r\n        data: [],\r\n        term: '',\r\n        media: 'musicVideo',\r\n        activeMedia: false,\r\n        url: '',\r\n        disableScroll: false\r\n    };\r\n\r\n    render() {\r\n        const typesMedia = [\r\n            {label: 'Music Video', value: 'musicVideo'},\r\n            {label: 'Music', value: 'music'},\r\n            {label: 'Movie', value: 'movie'},\r\n            {label: 'Audiobook', value: 'audiobook'},\r\n        ];\r\n        const { data, media, activeMedia, url, disableScroll } = this.state;\r\n        const openMedia = activeMedia ? <Media url={url} typeMedia={media} closeMedia={this.closeMedia} /> : null;\r\n        const styleMainContainer = disableScroll || activeMedia ? \r\n        { 'position' : 'fixed',\r\n          'overflow' : 'hidden',\r\n          'width' : '100%',\r\n          'height' : '100%'\r\n        } : null;\r\n        return(\r\n            <React.Fragment>\r\n                <Search \r\n                        typesMedia={typesMedia}\r\n                        onSubmitQuery={this.onSubmitQuery}\r\n                        onDisableScroll={this.onDisableScroll} />\r\n                <div className=\"main-container\" style={styleMainContainer}>\r\n                    <div className=\"container\" style={{position: 'relative'}}>\r\n                        <Content \r\n                            data={data} \r\n                            activeMedia={activeMedia}\r\n                            playMedia={(url) => this.playMedia(url)} />\r\n                        { openMedia }\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    playMedia = (url) => {\r\n        const activeMedia = this.state.activeMedia;\r\n        window.scrollTo(0, 0);\r\n        this.setState({\r\n            activeMedia: !activeMedia,\r\n            url: url,\r\n            disableScroll: true\r\n        });\r\n    };\r\n\r\n    closeMedia = () => {\r\n        this.setState({\r\n            activeMedia: false,\r\n            disableScroll: false\r\n        })\r\n    };\r\n\r\n    onSubmitQuery = (typeMedia, term) => {\r\n        this.iTunesService\r\n            .getMedia(term, typeMedia)\r\n            .then((data) => {\r\n                this.setState((state) => {\r\n                    return{\r\n                        data,\r\n                        media: typeMedia,\r\n                        term: term\r\n                    }\r\n                });\r\n            }).catch(() => {\r\n                this.setState({\r\n                    data: [],\r\n                    media: typeMedia,\r\n                    term: term\r\n                })\r\n            });\r\n    }\r\n\r\n    onDisableScroll = (disableState) => {\r\n        this.setState({\r\n            disableScroll: disableState\r\n        })\r\n    }\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}